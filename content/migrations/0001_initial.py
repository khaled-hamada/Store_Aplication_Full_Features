# Generated by Django 3.0.2 on 2021-04-26 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bread_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('new_packet_cost', models.IntegerField(default=0.0)),
                ('new_quantity_per_packet', models.IntegerField(default=0.0)),
                ('new_unit_buy_price', models.FloatField(default=0)),
                ('old_packet_cost', models.IntegerField(default=0.0)),
                ('old_quantity_per_packet', models.IntegerField(default=0.0)),
                ('old_unit_buy_price', models.FloatField(default=0)),
                ('amount_new', models.IntegerField(default=0)),
                ('amount_old', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Current_manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.IntegerField(default=0)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('address', models.CharField(max_length=264)),
                ('phone_number', models.CharField(default='', max_length=264)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('given_status', models.IntegerField(default=0)),
                ('paid_status', models.IntegerField(default=0)),
                ('bill_type', models.IntegerField(default=0)),
                ('given_amount', models.FloatField(default=0.0)),
                ('discount', models.FloatField(default=0.0)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Customer')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Current_manager')),
            ],
        ),
        migrations.CreateModel(
            name='Katchab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('new_packet_cost', models.IntegerField(default=0.0)),
                ('new_quantity_per_packet', models.IntegerField(default=0.0)),
                ('new_unit_buy_price', models.FloatField(default=0)),
                ('old_packet_cost', models.IntegerField(default=0.0)),
                ('old_quantity_per_packet', models.IntegerField(default=0.0)),
                ('old_unit_buy_price', models.FloatField(default=0)),
                ('amount_new', models.IntegerField(default=0)),
                ('amount_old', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement_Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Packet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('new_packet_cost', models.IntegerField(default=0.0)),
                ('new_quantity_per_packet', models.IntegerField(default=0.0)),
                ('new_unit_buy_price', models.FloatField(default=0)),
                ('old_packet_cost', models.IntegerField(default=0.0)),
                ('old_quantity_per_packet', models.IntegerField(default=0.0)),
                ('old_unit_buy_price', models.FloatField(default=0)),
                ('amount_new', models.IntegerField(default=0)),
                ('amount_old', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('given_money', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Point_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quantity_fixed', models.IntegerField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('quantity_packet', models.IntegerField(default=0)),
                ('unit_sell_price', models.FloatField(default=0)),
                ('restored_store_quantity', models.IntegerField(default=0)),
                ('given_status', models.IntegerField(default=0)),
                ('notes', models.TextField(default='', null=True)),
                ('Point', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('descreption', models.TextField(default='')),
                ('product_image', models.FileField(null=True, upload_to='canteen_products_pic/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Safe_Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=264)),
                ('money', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Sandwich_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('new_packet_cost', models.IntegerField(default=0.0)),
                ('new_quantity_per_packet', models.IntegerField(default=0.0)),
                ('new_unit_buy_price', models.FloatField(default=0)),
                ('old_packet_cost', models.IntegerField(default=0.0)),
                ('old_quantity_per_packet', models.IntegerField(default=0.0)),
                ('old_unit_buy_price', models.FloatField(default=0)),
                ('amount_new', models.IntegerField(default=0)),
                ('amount_old', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Trader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('address', models.CharField(max_length=264)),
                ('phone_number', models.CharField(default='', max_length=264)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('given_money', models.FloatField(default=0.0)),
                ('total_money', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Trader_Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('given_status', models.IntegerField(default=0)),
                ('paid_status', models.IntegerField(default=0)),
                ('bill_type', models.IntegerField(default=0)),
                ('given_amount', models.FloatField(default=0.0)),
                ('discount', models.FloatField(default=0.0)),
                ('bill_file', models.FileField(null=True, upload_to='canteen_bills/%Y/%m/%d')),
                ('notes', models.TextField(default='', null=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Current_manager')),
                ('trader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Trader')),
            ],
        ),
        migrations.CreateModel(
            name='withdrawings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descreption', models.TextField(default='')),
                ('day', models.DateTimeField(default=django.utils.timezone.now)),
                ('money_amount', models.FloatField(default=0.0)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Trader_Product_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_packet', models.IntegerField(default=0)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Product')),
                ('trader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Trader')),
            ],
        ),
        migrations.CreateModel(
            name='Trader_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quantity_fixed', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=0)),
                ('quantity_packet', models.IntegerField(default=0)),
                ('quantity_per_packet', models.IntegerField(default=0)),
                ('packet_price', models.FloatField(default=0)),
                ('discount_per_packet', models.FloatField(default=0.0)),
                ('restored_quantity', models.IntegerField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('given_status', models.IntegerField(default=0)),
                ('notes', models.TextField(default='', null=True)),
                ('line_type', models.IntegerField(default=0)),
                ('product_image', models.FileField(null=True, upload_to='canteen_products_pic/%Y/%m/%d')),
                ('production_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('expiration_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('come_from', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Trader_Product')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Product')),
                ('trader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Trader')),
                ('trader_bill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Trader_Bill')),
            ],
        ),
        migrations.CreateModel(
            name='Trader_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0.0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(default='')),
                ('bill_file', models.FileField(null=True, upload_to="upload_to='canteen_bills/%Y/%m/%d'")),
                ('discount', models.FloatField(default=0.0)),
                ('previos_amount', models.FloatField(default=0.0)),
                ('current_amount', models.FloatField(default=0.0)),
                ('payment_type', models.IntegerField(default=0)),
                ('reciever', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Trader')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Current_manager')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_unit', models.IntegerField(default=0)),
                ('unit_sell_price', models.FloatField(default=0)),
                ('measurement_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Measurement_Unit')),
                ('product', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Store_To_Point_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('quantity_packet', models.IntegerField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('unit_sell_price', models.FloatField(default=0)),
                ('line_type', models.IntegerField(default=0)),
                ('given_status', models.IntegerField(default=0)),
                ('point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Store_To_Point_Product', to='content.Point')),
                ('to_point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='To_Point', to='content.Point')),
                ('trader_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Trader_Product')),
            ],
        ),
        migrations.CreateModel(
            name='Sandwich',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_sell_price', models.FloatField(default=0.0)),
                ('bread', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Bread_Type')),
                ('katchab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Katchab')),
                ('packet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Packet')),
                ('sandwich_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Sandwich_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Safe_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateTimeField(default=django.utils.timezone.now)),
                ('money_amount', models.FloatField(default=0.0)),
                ('notes', models.TextField(default='')),
                ('safe_line_status', models.IntegerField(default=0)),
                ('given_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Current_manager')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='trader',
            field=models.ManyToManyField(blank=True, through='content.Trader_Product', to='content.Trader'),
        ),
        migrations.CreateModel(
            name='Point_User_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.FloatField(default=0.0)),
                ('g_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point')),
                ('t_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Current_manager')),
            ],
        ),
        migrations.CreateModel(
            name='Point_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.IntegerField(default=0)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Point_Product_Sellings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('quantity_packet', models.IntegerField(default=0)),
                ('unit_sell_price', models.FloatField(default=0)),
                ('discount_per_unit', models.FloatField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('line_type', models.IntegerField(default=0)),
                ('taken_status', models.IntegerField(default=0)),
                ('Point', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point')),
                ('bill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Customer_Bill')),
                ('come_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point_Product_Sellings')),
                ('point_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Point_Product')),
            ],
        ),
        migrations.AddField(
            model_name='point_product',
            name='trader_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Trader_Product'),
        ),
        migrations.CreateModel(
            name='DaySandwich',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('total_cost', models.FloatField(default=0.0)),
                ('total_return', models.FloatField(default=0.0)),
                ('profit', models.FloatField(default=0.0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sandwich', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Sandwich')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.FloatField(default=0.0)),
                ('previos_amount', models.FloatField(default=0.0)),
                ('current_amount', models.FloatField(default=0.0)),
                ('discount', models.FloatField(default=0.0)),
                ('payment_type', models.IntegerField(default=0)),
                ('g_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Customer')),
                ('t_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Current_manager')),
            ],
        ),
        migrations.AddField(
            model_name='current_manager',
            name='safe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Safe_Month'),
        ),
        migrations.AddField(
            model_name='current_manager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
